// Mocks generated by Mockito 5.2.0 from annotations
// in rick_morty_finder/test/unit_test/search/search_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rick_morty_finder/core/client/result.dart' as _i2;
import 'package:rick_morty_finder/rick_morty_app/characters/search/infrastructure/search_repository.dart'
    as _i3;
import 'package:rick_morty_finder/rick_morty_app/characters/shared/domain/character/episode.dart'
    as _i6;
import 'package:rick_morty_finder/rick_morty_app/characters/shared/domain/search/search_result.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeResult_0<T> extends _i1.Fake implements _i2.Result<T> {}

/// A class which mocks [SearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchRepository extends _i1.Mock implements _i3.SearchRepository {
  MockSearchRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.SearchResult>> searchByPage(int? page) =>
      (super.noSuchMethod(Invocation.method(#searchByPage, [page]),
              returnValue: Future<_i2.Result<_i5.SearchResult>>.value(
                  _FakeResult_0<_i5.SearchResult>()))
          as _i4.Future<_i2.Result<_i5.SearchResult>>);
  @override
  _i4.Future<_i2.Result<_i6.Episode>> searchFirstEpisode(String? episodeUrl) =>
      (super.noSuchMethod(Invocation.method(#searchFirstEpisode, [episodeUrl]),
              returnValue: Future<_i2.Result<_i6.Episode>>.value(
                  _FakeResult_0<_i6.Episode>()))
          as _i4.Future<_i2.Result<_i6.Episode>>);
}
